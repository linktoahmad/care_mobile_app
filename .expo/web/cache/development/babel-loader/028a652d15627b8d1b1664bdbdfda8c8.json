{"ast":null,"code":"import React, { useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, CardStyleInterpolators } from '@react-navigation/stack';\nimport { useTheme, BaseSetting } from '@config';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport Main from 'app/navigation/main';\nimport Loading from '@screens/Loading';\nimport Filter from '@screens/Filter';\nimport FlightFilter from '@screens/FlightFilter';\nimport BusFilter from '@screens/BusFilter';\nimport Search from '@screens/Search';\nimport SearchHistory from '@screens/SearchHistory';\nimport PreviewImage from '@screens/PreviewImage';\nimport SelectBus from '@screens/SelectBus';\nimport SelectCruise from '@screens/SelectCruise';\nimport CruiseFilter from '@screens/CruiseFilter';\nimport EventFilter from '@screens/EventFilter';\nimport SelectDarkOption from '@screens/SelectDarkOption';\nimport SelectFontOption from '@screens/SelectFontOption';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RootStack = createStackNavigator();\nexport default function Navigator() {\n  var language = useSelector(function (state) {\n    return state.application.language;\n  });\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme,\n      colors = _useTheme.colors;\n\n  var isDarkMode = useColorScheme() === 'dark';\n  useEffect(function () {\n    i18n.use(initReactI18next).init({\n      resources: BaseSetting.resourcesLanguage,\n      lng: BaseSetting.defaultLanguage,\n      fallbackLng: BaseSetting.defaultLanguage,\n      compatibilityJSON: 'v3'\n    });\n  }, []);\n  useEffect(function () {\n    i18n.changeLanguage(language);\n  }, [language]);\n  useEffect(function () {\n    if (Platform.OS === 'android') {\n      StatusBar.setBackgroundColor(colors.primary, true);\n    }\n\n    StatusBar.setBarStyle(isDarkMode ? 'light-content' : 'dark-content', true);\n  }, [colors.primary, isDarkMode]);\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsxs(RootStack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Loading\",\n      children: [_jsx(RootStack.Screen, {\n        name: \"Loading\",\n        component: Loading,\n        options: {\n          gestureEnabled: false\n        }\n      }), _jsx(RootStack.Screen, {\n        name: \"Main\",\n        component: Main\n      }), _jsx(RootStack.Screen, {\n        name: \"Filter\",\n        component: Filter\n      }), _jsx(RootStack.Screen, {\n        name: \"FlightFilter\",\n        component: FlightFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"BusFilter\",\n        component: BusFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"Search\",\n        component: Search\n      }), _jsx(RootStack.Screen, {\n        name: \"SearchHistory\",\n        component: SearchHistory\n      }), _jsx(RootStack.Screen, {\n        name: \"PreviewImage\",\n        component: PreviewImage\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectBus\",\n        component: SelectBus\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectCruise\",\n        component: SelectCruise\n      }), _jsx(RootStack.Screen, {\n        name: \"CruiseFilter\",\n        component: CruiseFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"EventFilter\",\n        component: EventFilter\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectDarkOption\",\n        component: SelectDarkOption,\n        options: {\n          presentation: 'transparentModal',\n          cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n          cardStyle: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)'\n          },\n          gestureEnabled: false\n        }\n      }), _jsx(RootStack.Screen, {\n        name: \"SelectFontOption\",\n        component: SelectFontOption,\n        options: {\n          presentation: 'transparentModal',\n          cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n          cardStyle: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["D:/CARE _application/Frontend/app/navigation/index.js"],"names":["React","useEffect","NavigationContainer","createStackNavigator","CardStyleInterpolators","useTheme","BaseSetting","i18n","initReactI18next","useSelector","Main","Loading","Filter","FlightFilter","BusFilter","Search","SearchHistory","PreviewImage","SelectBus","SelectCruise","CruiseFilter","EventFilter","SelectDarkOption","SelectFontOption","RootStack","Navigator","language","state","application","theme","colors","isDarkMode","useColorScheme","use","init","resources","resourcesLanguage","lng","defaultLanguage","fallbackLng","compatibilityJSON","changeLanguage","Platform","OS","StatusBar","setBackgroundColor","primary","setBarStyle","headerShown","gestureEnabled","presentation","cardStyleInterpolator","forFadeFromCenter","cardStyle","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {StatusBar, Platform, useColorScheme} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {\n  createStackNavigator,\n  CardStyleInterpolators,\n} from '@react-navigation/stack';\nimport {useTheme, BaseSetting} from '@config';\nimport i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport {useSelector} from 'react-redux';\n\n/* Main Stack Navigator */\nimport Main from 'app/navigation/main';\n/* Modal Screen only affect iOS */\nimport Loading from '@screens/Loading';\nimport Filter from '@screens/Filter';\nimport FlightFilter from '@screens/FlightFilter';\nimport BusFilter from '@screens/BusFilter';\nimport Search from '@screens/Search';\nimport SearchHistory from '@screens/SearchHistory';\nimport PreviewImage from '@screens/PreviewImage';\nimport SelectBus from '@screens/SelectBus';\nimport SelectCruise from '@screens/SelectCruise';\nimport CruiseFilter from '@screens/CruiseFilter';\nimport EventFilter from '@screens/EventFilter';\nimport SelectDarkOption from '@screens/SelectDarkOption';\nimport SelectFontOption from '@screens/SelectFontOption';\n\nconst RootStack = createStackNavigator();\n\nexport default function Navigator() {\n  const language = useSelector(state => state.application.language);\n  const {theme, colors} = useTheme();\n  const isDarkMode = useColorScheme() === 'dark';\n\n  /**\n   * init language\n   */\n  useEffect(() => {\n    i18n.use(initReactI18next).init({\n      resources: BaseSetting.resourcesLanguage,\n      lng: BaseSetting.defaultLanguage,\n      fallbackLng: BaseSetting.defaultLanguage,\n      compatibilityJSON: 'v3',\n    });\n  }, []);\n\n  /**\n   * when reducer language change\n   */\n  useEffect(() => {\n    i18n.changeLanguage(language);\n  }, [language]);\n\n  /**\n   * when theme change\n   */\n  useEffect(() => {\n    if (Platform.OS === 'android') {\n      StatusBar.setBackgroundColor(colors.primary, true);\n    }\n    StatusBar.setBarStyle(isDarkMode ? 'light-content' : 'dark-content', true);\n  }, [colors.primary, isDarkMode]);\n\n  return (\n    <NavigationContainer theme={theme}>\n      <RootStack.Navigator\n        screenOptions={{\n          headerShown: false,\n        }}\n        initialRouteName=\"Loading\">\n        <RootStack.Screen\n          name=\"Loading\"\n          component={Loading}\n          options={{gestureEnabled: false}}\n        />\n        <RootStack.Screen name=\"Main\" component={Main} />\n        <RootStack.Screen name=\"Filter\" component={Filter} />\n        <RootStack.Screen name=\"FlightFilter\" component={FlightFilter} />\n        <RootStack.Screen name=\"BusFilter\" component={BusFilter} />\n        <RootStack.Screen name=\"Search\" component={Search} />\n        <RootStack.Screen name=\"SearchHistory\" component={SearchHistory} />\n        <RootStack.Screen name=\"PreviewImage\" component={PreviewImage} />\n        <RootStack.Screen name=\"SelectBus\" component={SelectBus} />\n        <RootStack.Screen name=\"SelectCruise\" component={SelectCruise} />\n        <RootStack.Screen name=\"CruiseFilter\" component={CruiseFilter} />\n        <RootStack.Screen name=\"EventFilter\" component={EventFilter} />\n        <RootStack.Screen\n          name=\"SelectDarkOption\"\n          component={SelectDarkOption}\n          options={{\n            presentation: 'transparentModal',\n            cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n            cardStyle: {backgroundColor: 'rgba(0, 0, 0, 0.5)'},\n            gestureEnabled: false,\n          }}\n        />\n        <RootStack.Screen\n          name=\"SelectFontOption\"\n          component={SelectFontOption}\n          options={{\n            presentation: 'transparentModal',\n            cardStyleInterpolator: CardStyleInterpolators.forFadeFromCenter,\n            cardStyle: {backgroundColor: 'rgba(0, 0, 0, 0.5)'},\n          }}\n        />\n      </RootStack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}